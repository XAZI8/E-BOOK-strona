// backend/index.js
import express from 'express';
import cors from 'cors';
import bodyParser from 'body-parser';
import { config } from 'dotenv';
import { OpenAI } from 'openai';

config();
const app = express();
const port = process.env.PORT || 5000;
const openai = new OpenAI({ apiKey: process.env.OPENAI_API_KEY });

app.use(cors());
app.use(bodyParser.json());

app.post('/api/chat', async (req, res) => {
  const { message } = req.body;

  try {
    const chatCompletion = await openai.chat.completions.create({
      model: 'gpt-4',
      messages: [
        { role: 'system', content: 'Jesteś Rico – elegancki, pomocny asystent AI, który odpowiada po polsku lub angielsku, zależnie od języka klienta.' },
        { role: 'user', content: message }
      ],
      temperature: 0.7
    });

    const reply = chatCompletion.choices[0].message.content;
    res.json({ reply });
  } catch (error) {
    console.error('OpenAI error:', error);
    res.status(500).json({ reply: 'Wystąpił błąd po stronie serwera.' });
  }
});

app.listen(port, () => {
  console.log(`Rico backend listening on port ${port}`);
});
